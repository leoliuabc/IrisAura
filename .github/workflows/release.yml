name: Build IrisAura

on:
  push:
    tags:
      - 'v1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        arch: [amd64, arm64]

    env:
      APP_NAME: IrisAura
      BUILD_DIR: build
      FRONTEND_DIR: frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install Wails CLI
      run: |
        go install github.com/wailsapp/wails/v2/cmd/wails@latest
        echo "${{ github.workspace }}/go/bin" >> $GITHUB_PATH

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Build frontend
      working-directory: ${{ env.FRONTEND_DIR }}
      run: |
        npm install
        npm run build
        npm audit fix --force

    - name: Go mod tidy & download
      run: |
        go mod tidy
        go mod download

    - name: Create build directory
      run: mkdir -p ${{ env.BUILD_DIR }}/bin/${{ matrix.os }}/${{ matrix.arch }}

    - name: Build IrisAura
      run: |
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          GOOS=darwin
          GOARCH=${{ matrix.arch }}
          wails build -platform $GOOS/$GOARCH
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          GOOS=windows
          GOARCH=${{ matrix.arch }}
          wails build -platform $GOOS/$GOARCH
        fi

    # macOS Universal merge
    - name: macOS Intel rename
      if: matrix.os == 'macos-latest' && matrix.arch == 'amd64'
      run: mv build/bin/${{ env.APP_NAME }}.app build/bin/macos/amd64/${{ env.APP_NAME }}-intel.app

    - name: macOS ARM merge
      if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
      run: |
        mv build/bin/${{ env.APP_NAME }}.app build/bin/macos/arm64/${{ env.APP_NAME }}-arm64.app
        cp -R build/bin/macos/amd64/${{ env.APP_NAME }}-intel.app build/bin/macos/Universal/${{ env.APP_NAME }}.app
        lipo -create \
          build/bin/macos/amd64/${{ env.APP_NAME }}-intel.app/Contents/MacOS/${{ env.APP_NAME }} \
          build/bin/macos/arm64/${{ env.APP_NAME }}-arm64.app/Contents/MacOS/${{ env.APP_NAME }} \
          -output build/bin/macos/Universal/${{ env.APP_NAME }}.app/Contents/MacOS/${{ env.APP_NAME }}
        codesign --deep --force --sign - build/bin/macos/Universal/${{ env.APP_NAME }}.app

    # Windows exe rename
    - name: Windows rename
      if: matrix.os == 'windows-latest'
      run: mv build/bin/${{ env.APP_NAME }}.exe build/bin/windows/${{ matrix.arch }}/${{ env.APP_NAME }}-${{ matrix.arch }}.exe

    # Upload release for this platform
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ env.APP_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
        asset_path: build/bin/${{ matrix.os }}/${{ matrix.arch }}
