name: Build IrisAura

on:
  push:
    tags:
      - 'v1.0.0'
  workflow_dispatch: # 可手动触发

env:
  APP_NAME: IrisAura
  BUILD_DIR: build
  FRONTEND_DIR: frontend

jobs:
  # ==========================
  # macOS 构建 + Universal
  # ==========================
  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Wails CLI
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          echo "${{ github.workspace }}/go/bin" >> $GITHUB_PATH

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          npm install
          npm run build
          npm audit fix --force

      - name: Go mod tidy & download
        run: |
          go mod tidy
          go mod download

      # ----------------------
      # 构建 Intel
      # ----------------------
      - name: Build Intel (amd64)
        run: |
          GOOS=darwin
          GOARCH=amd64
          wails build -platform $GOOS/$GOARCH
          mkdir -p build/bin/macos/amd64
          mv build/bin/${{ env.APP_NAME }}.app build/bin/macos/amd64/${{ env.APP_NAME }}-intel.app

      # ----------------------
      # 构建 ARM64
      # ----------------------
      - name: Build ARM64
        run: |
          GOOS=darwin
          GOARCH=arm64
          wails build -platform $GOOS/$GOARCH
          mkdir -p build/bin/macos/arm64
          mv build/bin/${{ env.APP_NAME }}.app build/bin/macos/arm64/${{ env.APP_NAME }}-arm64.app

      # ----------------------
      # 合并 Universal
      # ----------------------
      - name: Create Universal app
        run: |
          mkdir -p build/bin/macos/Universal
          cp -R build/bin/macos/amd64/${{ env.APP_NAME }}-intel.app build/bin/macos/Universal/${{ env.APP_NAME }}.app
          lipo -create \
            build/bin/macos/amd64/${{ env.APP_NAME }}-intel.app/Contents/MacOS/${{ env.APP_NAME }} \
            build/bin/macos/arm64/${{ env.APP_NAME }}-arm64.app/Contents/MacOS/${{ env.APP_NAME }} \
            -output build/bin/macos/Universal/${{ env.APP_NAME }}.app/Contents/MacOS/${{ env.APP_NAME }}
          codesign --deep --force --sign - build/bin/macos/Universal/${{ env.APP_NAME }}.app

      - name: Upload macOS Universal release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: IrisAura-macos-Universal
          files: build/bin/macos/Universal/*
          token: ${{ secrets.GITHUB_TOKEN }}

  # ==========================
  # Windows 构建
  # ==========================
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          npm install
          npm run build
          npm audit fix --force

      - name: Go mod tidy & download
        run: |
          go mod tidy
          go mod download

      - name: Build Wails app
        shell: bash
        run: |
          GOOS=windows
          GOARCH=${{ matrix.arch }}
          wails build -platform $GOOS/$GOARCH

      - name: Organize Windows build
        shell: bash
        run: |
          mkdir -p build/bin/windows/${{ matrix.arch }}
          mv build/bin/${{ env.APP_NAME }}.exe build/bin/windows/${{ matrix.arch }}/${{ env.APP_NAME }}-${{ matrix.arch }}.exe

      - name: Upload Windows release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: IrisAura-Windows-${{ matrix.arch }}
          files: build/bin/windows/${{ matrix.arch }}/*
          token: ${{ secrets.GITHUB_TOKEN }}